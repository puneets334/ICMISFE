ERROR - 2023-12-01 09:31:21 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:31:21 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:33:23 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:33:23 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:53:45 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:53:45 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:54:19 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:54:19 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:54:57 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:54:57 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:54:57\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:54:57\', \'2023-12-01 09:54:57\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:54:57\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:54:57\', \'2023-12-01 09:54:57\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:54:57\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:54:57\', \'2023-12-01 09:54:57\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:56:16 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:56:16 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'DDRGD\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:56:16\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:56:16\', \'2023-12-01 09:56:16\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'DDRGD\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:56:16\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:56:16\', \'2023-12-01 09:56:16\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PE\', \'TEST PE\', \'DDRGD\', \'45\', \'45\', \'\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:56:16\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:56:16\', \'2023-12-01 09:56:16\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
CRITICAL - 2023-12-01 09:56:44 --> Undefined array key "total"
in APPPATH/Controllers/Filing/Refiling.php on line 167.
 1 APPPATH/Controllers/Filing/Refiling.php(167): CodeIgniter\Debug\Exceptions->errorHandler(2, 'Undefined array key "total"', 'APPPATH/Controllers/Filing/Refiling.php', 167)
 2 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Refiling->index()
 3 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Refiling))
 4 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
 5 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
CRITICAL - 2023-12-01 09:57:05 --> Undefined array key "total"
in APPPATH/Controllers/Filing/Refiling.php on line 167.
 1 APPPATH/Controllers/Filing/Refiling.php(167): CodeIgniter\Debug\Exceptions->errorHandler(2, 'Undefined array key "total"', 'APPPATH/Controllers/Filing/Refiling.php', 167)
 2 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Refiling->index()
 3 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Refiling))
 4 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
 5 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:57:44 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:57:44 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:57:44\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:57:44\', \'2023-12-01 09:57:44\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:57:44\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:57:44\', \'2023-12-01 09:57:44\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:57:44\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:57:44\', \'2023-12-01 09:57:44\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 09:59:10 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 09:59:10 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:59:10\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:59:10\', \'2023-12-01 09:59:10\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:59:10\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:59:10\', \'2023-12-01 09:59:10\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'TEST PESFSF\', \'TEST PESFSF\', \'DDRGD\', \'45\', \'45\', \'EWFEWEW\', \'FEFFERF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'\', \'6666666666\', \'1\', \'2023-12-01 09:59:10\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 09:59:10\', \'2023-12-01 09:59:10\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
CRITICAL - 2023-12-01 09:59:35 --> Undefined array key "total"
in APPPATH/Controllers/Filing/Refiling.php on line 167.
 1 APPPATH/Controllers/Filing/Refiling.php(167): CodeIgniter\Debug\Exceptions->errorHandler(2, 'Undefined array key "total"', 'APPPATH/Controllers/Filing/Refiling.php', 167)
 2 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Refiling->index()
 3 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Refiling))
 4 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
 5 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
CRITICAL - 2023-12-01 10:00:19 --> Undefined array key "total"
in APPPATH/Controllers/Filing/Refiling.php on line 167.
 1 APPPATH/Controllers/Filing/Refiling.php(167): CodeIgniter\Debug\Exceptions->errorHandler(2, 'Undefined array key "total"', 'APPPATH/Controllers/Filing/Refiling.php', 167)
 2 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Refiling->index()
 3 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Refiling))
 4 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
 5 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 10:00:37 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 10:00:37 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 10:01:03 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 10:01:03 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 10:01:18 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 10:01:18 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:18\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:18\', \'2023-12-01 10:01:18\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:18\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:18\', \'2023-12-01 10:01:18\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:18\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:18\', \'2023-12-01 10:01:18\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 10:01:33 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 10:01:33 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:33\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:33\', \'2023-12-01 10:01:33\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:33\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:33\', \'2023-12-01 10:01:33\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 10:01:33\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 10:01:33\', \'2023-12-01 10:01:33\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:31:13 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:31:13 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:31:13\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:31:13\', \'2023-12-01 11:31:13\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:31:13\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:31:13\', \'2023-12-01 11:31:13\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:31:13\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:31:13\', \'2023-12-01 11:31:13\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:37:05 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:37:05 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:37:05\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:37:05\', \'2023-12-01 11:37:05\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:37:05\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:37:05\', \'2023-12-01 11:37:05\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:37:05\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:37:05\', \'2023-12-01 11:37:05\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:40:28 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:40:28 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:40:28\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:40:28\', \'2023-12-01 11:40:28\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:40:28\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:40:28\', \'2023-12-01 11:40:28\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:40:28\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:40:28\', \'2023-12-01 11:40:28\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:43:04 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:43:04 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:43:04\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:43:04\', \'2023-12-01 11:43:04\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:43:04\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:43:04\', \'2023-12-01 11:43:04\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:43:04\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:43:04\', \'2023-12-01 11:43:04\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:44:22 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:44:22 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:44:22\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:44:22\', \'2023-12-01 11:44:22\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:44:22\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:44:22\', \'2023-12-01 11:44:22\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'DSFDSFSD\', \'DSFDSFSD\', \'ASFDASF\', \'23\', \'23\', \'DASFDASF\', \'DSFDSFSDEF\', \'KESATH\', \'1\', \'599129\', \'802125\', \'ga@gmail.com\', \'8888888888\', \'1\', \'2023-12-01 11:44:22\', \'P\', \'S\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:44:22\', \'2023-12-01 11:44:22\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:45:28 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:45:28 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:45:52 --> ErrorException: pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^ in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."i...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."i...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."i...')
#4 /var/www/html/system/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."i...', Array, false)
#5 /var/www/html/app/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
#6 /var/www/html/app/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('')
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:45:52 --> pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = ''
                              ^
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  invalid input syntax for type bigint: &quot;&quot;
LINE 4: WHERE &quot;st1&quot;.&quot;id_no&quot; = \'\'
                              ^', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = \'\'
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = \'Y\'
AND "st1"."display" = \'Y\'
AND "st2"."display" = \'Y\'
ORDER BY "st2"."name" ASC')
 5 SYSTEMPATH/Database/BaseBuilder.php(1585): CodeIgniter\Database\BaseConnection->query('SELECT "st2"."id_no", "st2"."name"
FROM "master"."state" "st1"
JOIN "master"."state" "st2" ON "st1"."state_code" = "st2"."state_code"
WHERE "st1"."id_no" = :st1.id_no:
AND "st2"."district_code" !=0
AND "st2"."sub_dist_code" =0
AND "st2"."village_code" =0
AND "st2"."display" = :st2.display:
AND "st1"."display" = :st1.display:
AND "st2"."display" = :st2.display.1:
ORDER BY "st2"."name" ASC', [...], false)
 6 APPPATH/Models/Common/Dropdown_list_model.php(265): CodeIgniter\Database\BaseBuilder->get()
 7 APPPATH/Controllers/Common/Ajaxcalls.php(89): App\Models\Common\Dropdown_list_model->get_districts_list('ROOTPATH/public')
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Common\Ajaxcalls->get_districts()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Common\Ajaxcalls))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:46:15 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:46:15 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:46:15\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:46:15\', \'2023-12-01 11:46:15\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:46:15\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:46:15\', \'2023-12-01 11:46:15\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:46:15\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:46:15\', \'2023-12-01 11:46:15\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:48:58 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:48:58 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:48:58\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:48:58\', \'2023-12-01 11:48:58\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:48:58\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:48:58\', \'2023-12-01 11:48:58\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:48:58\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:48:58\', \'2023-12-01 11:48:58\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:50:43 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:50:43 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:50:43\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:50:43\', \'2023-12-01 11:50:43\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:50:43\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:50:43\', \'2023-12-01 11:50:43\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:50:43\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:50:43\', \'2023-12-01 11:50:43\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 11:51:04 --> ErrorException: pg_query(): Query failed: ERROR:  value too long for type character(1) in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "pa...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "pa...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "pa...')
#4 /var/www/html/system/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "pa...', Array, false)
#5 /var/www/html/app/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert(Array)
#6 /var/www/html/app/Controllers/Filing/Diary.php(1135): insert('party', Array)
#7 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
#8 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
#9 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#10 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#11 {main}
CRITICAL - 2023-12-01 11:51:04 --> pg_query(): Query failed: ERROR:  value too long for type character(1)
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  value too long for type character(1)', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:51:04\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:51:04\', \'2023-12-01 11:51:04\', \'1\', \'10.40.186.150\')')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:51:04\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:51:04\', \'2023-12-01 11:51:04\', \'1\', \'10.40.186.150\')')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (\'P\', 1, 1, \'I\', \'6YUUYKU\', \'6YUUYKU\', \'\', \'78\', \'78\', \'\', \'YUKYUKYUK\', \'KESATH\', \'1\', \'5611\', \'802125\', \'\', \'8888888888\', \'1\', \'2023-12-01 11:51:04\', \'P\', \'\', 0, 0, \'416242023\', \'96\', \'2023-12-01 11:51:04\', \'2023-12-01 11:51:04\', \'1\', \'10.40.186.150\')')
 5 SYSTEMPATH/Database/BaseBuilder.php(1916): CodeIgniter\Database\BaseConnection->query('INSERT INTO "party" ("pet_res", "sr_no", "sr_no_show", "ind_dep", "partyname", "partysuff", "prfhname", "age", "sex", "addr1", "addr2", "dstname", "state", "city", "pin", "email", "contact", "usercode", "ent_dt", "pflag", "sonof", "authcode", "deptcode", "diary_no", "country", "create_modify", "updated_on", "updated_by", "updated_by_ip") VALUES (:pet_res:, :sr_no:, :sr_no_show:, :ind_dep:, :partyname:, :partysuff:, :prfhname:, :age:, :sex:, :addr1:, :addr2:, :dstname:, :state:, :city:, :pin:, :email:, :contact:, :usercode:, :ent_dt:, :pflag:, :sonof:, :authcode:, :deptcode:, :diary_no:, :country:, :create_modify:, :updated_on:, :updated_by:, :updated_by_ip:)', [...], false)
 6 APPPATH/Helpers/common_helper.php(35): CodeIgniter\Database\BaseBuilder->insert([...])
 7 APPPATH/Controllers/Filing/Diary.php(1135): insert('party', [...])
 8 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Diary->save_new_filing()
 9 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Diary))
10 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
11 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:17:16 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:17:16 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:18:51 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:18:51 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:24:27 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:24:27 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:24:48 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:24:48 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:24:52 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:24:52 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:24:52 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:24:52 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:25:04 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:25:04 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:25:10 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:25:10 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:26:20 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:26:20 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:26:38 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:26:38 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:26:43 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:26:43 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
ERROR - 2023-12-01 12:26:52 --> ErrorException: pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement in /var/www/html/system/Database/Postgre/Connection.php:140
Stack trace:
#0 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Que...', '/var/www/html/s...', 140)
#1 /var/www/html/system/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentativ...')
#2 /var/www/html/system/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentativ...')
#3 /var/www/html/system/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentativ...')
#4 /var/www/html/app/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentativ...')
#5 /var/www/html/app/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
#6 /var/www/html/system/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
#7 /var/www/html/system/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
#8 /var/www/html/system/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(NULL, Object(Config\Cache), false)
#9 /var/www/html/public/index.php(67): CodeIgniter\CodeIgniter->run()
#10 {main}
CRITICAL - 2023-12-01 12:26:52 --> pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, ',' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = 'Y'
JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
LEFT JOIN usersection us ON u.section = us.id AND us.display = 'Y'
WHERE b.display = 'Y'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, ', ' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = '' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = 'f' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, ',')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, ',' ORDER BY e_date), 1, position(',' in string_agg(us.section_name, ',' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = '' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = 'Y'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = 'Y'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = 'Y'
  JOIN usersection us ON u.section = us.id AND us.display = 'Y'
  WHERE b.display = 'Y'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement
in SYSTEMPATH/Database/Postgre/Connection.php on line 140.
 1 [internal function]: CodeIgniter\Debug\Exceptions->errorHandler(2, 'pg_query(): Query failed: ERROR:  relation &quot;usersection&quot; does not exist
LINE 8: JOIN usersection us ON m.section_id = us.id AND us.display =...
             ^
QUERY:  SELECT 
  (STRING_AGG(section_name, \',\' ORDER BY e_date)) AS section_name
  
             FROM
    (
        SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN usersection us ON m.section_id = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT us.section_name, us.id AS sec_id, m.diary_no, NULL AS e_date
FROM main m
JOIN users u ON m.dacode = u.usercode AND u.display = \'Y\'
JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE m.diary_no = dno 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
        CASE
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE
            WHEN (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE
                    WHEN active_reg_year = 0 THEN
                        CASE
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    ELSE active_reg_year
                END
            )
        END AS reg_year,
        ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
    FROM main a
    WHERE a.diary_no = dno
    AND ((a.dacode IS NULL) OR (a.dacode = 0))
    AND ref_agency_code_id::integer NOT IN (
        SELECT id
        FROM ref_agency_code
        WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
    )
) a
JOIN da_case_distribution b ON b.case_type = a.casetype_id
    AND ref_agency_state_id = state
    AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
LEFT JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
WHERE b.display = \'Y\'
GROUP BY a.diary_no, sec_id 

UNION

SELECT STRING_AGG(us.section_name, \', \' ORDER BY NULL) AS section_name, us.id AS sec_id, a.diary_no, NULL AS e_date
FROM (
    SELECT a.diary_no,
    CASE 
        WHEN active_casetype_id = 0 THEN casetype_id
        ELSE active_casetype_id
    END AS casetype_id,
    CASE 
        WHEN active_fil_no = \'\' THEN fil_no
        ELSE active_fil_no
    END AS fil_no,
    CASE 
        WHEN (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year
            END
        ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
        ELSE (
            CASE 
                WHEN active_reg_year = 0 THEN
                    CASE 
                        WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                        ELSE EXTRACT(YEAR FROM active_fil_dt)
                    END
                ELSE active_reg_year

END

)
   END AS reg_year, ref_agency_state_id, ref_agency_code_id, diary_no_rec_date, pet_name, res_name
   FROM main a
   WHERE a.diary_no = dno
   AND (a.dacode IS NULL OR a.dacode = 0)
   AND ref_agency_code_id IN (
    SELECT id
    FROM ref_agency_code
    WHERE is_deleted = \'f\' AND agency_or_court::integer IN (5, 6)
   )
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
   AND a.ref_agency_code_id = ANY(STRING_TO_ARRAY(b.ref_agency, \',\')::INT[])
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id
  
union
  
  
  SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id 
 
  
  union
  
     SELECT 
  substring(string_agg(us.section_name, \',\' ORDER BY e_date), 1, position(\',\' in string_agg(us.section_name, \',\' ORDER BY e_date))-1) AS section_name,
  us.id AS sec_id,
  a.diary_no,NULL AS e_date
 FROM (
  SELECT 
   a.diary_no,
   CASE 
            WHEN active_casetype_id = 0 THEN casetype_id
            ELSE active_casetype_id
        END AS casetype_id,
        CASE 
            WHEN active_fil_no = \'\' THEN fil_no
            ELSE active_fil_no
        END AS fil_no,
        CASE 
            WHEN (
                CASE 
                    WHEN active_reg_year = 0 THEN (
                        CASE 
                            WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            ) = 0 THEN EXTRACT(YEAR FROM diary_no_rec_date)
            ELSE (
                CASE 
                    WHEN active_reg_year = 0 THEN (

CASE

WHEN EXTRACT(YEAR FROM active_fil_dt) = 0 THEN EXTRACT(YEAR FROM fil_dt)
                            ELSE EXTRACT(YEAR FROM active_fil_dt)
                        END
                    )
                    ELSE active_reg_year
                END
            )
        END AS reg_year, 
        ref_agency_state_id, 
        ref_agency_code_id, 
        diary_no_rec_date, 
        pet_name, 
        res_name, 
        e_date
   FROM main a
   JOIN advocate b ON a.diary_no = b.diary_no
   JOIN mul_category mc ON a.diary_no = mc.diary_no AND mc.display = \'Y\'
   WHERE a.diary_no = dno
    AND (a.dacode IS NULL OR a.dacode = 0)
    AND b.display = \'Y\'
    AND a.casetype_id IN (5, 6)
    AND submaster_id IN (349,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,318,332,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582)
  ) a
  JOIN da_case_distribution_tri b ON b.case_type = a.casetype_id
   AND reg_year BETWEEN b.case_f_yr AND b.case_t_yr
  JOIN users u ON b.dacode = u.usercode AND u.display = \'Y\'
  JOIN usersection us ON u.section = us.id AND us.display = \'Y\'
  WHERE b.display = \'Y\'
  GROUP BY a.diary_no, sec_id limit 1
  
    ) as b group by b.diary_no limit 1
CONTEXT:  PL/pgSQL function tentative_section(bigint) line 7 at SQL statement', 'SYSTEMPATH/Database/Postgre/Connection.php', 140)
 2 SYSTEMPATH/Database/Postgre/Connection.php(140): pg_query(Object(PgSql\Connection), 'select tentative_section(429812018)')
 3 SYSTEMPATH/Database/BaseConnection.php(666): CodeIgniter\Database\Postgre\Connection->execute('select tentative_section(429812018)')
 4 SYSTEMPATH/Database/BaseConnection.php(593): CodeIgniter\Database\BaseConnection->simpleQuery('select tentative_section(429812018)')
 5 APPPATH/Models/Filing/IADocumentModel.php(76): CodeIgniter\Database\BaseConnection->query('select tentative_section(429812018)')
 6 APPPATH/Controllers/Filing/Ia_documents.php(31): App\Models\Filing\IADocumentModel->get_hcinfo_m_e_new('429812018')
 7 SYSTEMPATH/CodeIgniter.php(925): App\Controllers\Filing\Ia_documents->index()
 8 SYSTEMPATH/CodeIgniter.php(480): CodeIgniter\CodeIgniter->runController(Object(App\Controllers\Filing\Ia_documents))
 9 SYSTEMPATH/CodeIgniter.php(349): CodeIgniter\CodeIgniter->handleRequest(null, Object(Config\Cache), false)
10 FCPATH/index.php(67): CodeIgniter\CodeIgniter->run()
